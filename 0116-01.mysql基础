1.表结构的创建
	表：行、列、名字
	a.数据类型
		字符串 char  varchar
		数字   int
		日期   date
	注意：char和varchar区别(char是定长，varchar是变长)
		char(10)  --6 ----char(10)    速度快
		varchar(10) --6 ---varchar(6) 节省空间
	注意：字符串一定要定义最多放置多少字符串
	b.表结构的创建
	语法：create table 表(
			列名  数据类型,
			列名  数据类型,
			...
		);
	例子：创建表韩国(kr),泡菜名字(pname)字符类型，泡菜价格(price)数字类型，出厂日期ddate
	create table kr(
		pname char(10),
		price int,
		ddate date
	);
	补充：创建数据库 create database test;
	补充：查看表结构  desc kr;
	c.约束
	主键：列中的数据不能为空，每个条件只能搜索到1条数据(数据唯一)，每张表中只能有一个主键
	唯一：每个条件只能搜索到1条数据(数据唯一)，表中可以有多个，主要作为主键约束的补充
	非空：列中的数据不能为空
	检查：列中的数据是否满足条件
	外键(参考)：列中的数据依赖于另外一张表中的数据
2.SQL语句
	结构化查询语言
	DDL：数据库定义语言   create alter drop truncate
	DML：数据库操作语言   insert update  delete
	DCL：数据库控制语言   grant revoke
	DQL：数据库查询语言   select
3.数据的新增
	注意：字符、日期类型使用单引号
	      数字类型直接使用
	a.向表中所有列新增数据
	语法：insert into 表 values(值1,值2...);
	注意：数据的顺序和列的顺序必须一致，列的数据类型和值的数据类型必须一致
	例子：向kr表中新增数据，名字chui，价格2500,出厂日期 2018-01-01
	insert into kr values('chui',2500,'2018-01-01');
	b.向表中指定列新增数据
	语法：insert into 表(列1,列2) values(值1,值2);
	例子：向kr表中新增数据，名字hey，价格2900,出厂日期 1986-01-01
	insert into kr(pname,price,ddate) values('hey',2900,'1986-01-01');
	例子：向kr表中新增数据，名字为55k，价格251
	insert into kr(pname,price) values('55k',251);
	c.新增多条数据
	insert into kr(pname,price) values('simida',100),('kouniqiwa',200),('haleshao',300);
4.数据的修改
	注意：字符、日期类型使用单引号
	数字类型直接使用
	语法：update 表 set 列=值 where 条件;
	注意：如果增加where条件，修改的是指定行的的列，如果不加是修改整个列的数据
	例子：修改kr表中名字55k的价格为0
	update kr set price=0 where pname='55k';
	例子：修改kr表中price为1000
	update kr set price=1000;
5.数据的删除
	delete		可以删除指定数据，删除数据可以找回，DML
	truncate	只能删除所有数据，删除数据无法找回，DDL
	delete语法：
	delete from 表 where 条件;
	例子：删除kr表中名字是55k的所有数据
	delete from kr where pname='55k';
	例子：删除kr表中所有数据
	delete from kr ;
	truncate语法：
	truncate table 表;
	例子：删除kr表中所有数据
	truncate table kr;
补充：删除表结构(数据也被删除)
	drop table 表名;
	删除kr表
	drop table kr
补充：
	sakila样例数据库安装
	a.下载
	https://dev.mysql.com/doc/index-other.html
	b.进入到压缩包所在目录
	cd 下载
	c.解压压缩包到当前目录下
	 tar -xzvf sakila-db.tar.gz 
	d.进入到已经解压的目录中(sakila-data.sql所在目录)
	cd sakila-db/
	e.登录mysql数据库
	mysql -u root -p
	f.导入数据库的表结构
	source sakila-schema.sql;
	g.导入数据库的数据库
	source sakila-data.sql;
10.数据的查询
	查询可以查询指定的行，指定的列，指定行的列
	语法：select 列 from 表 [where 条件];
	例子：
	查询city表中所有数据
	select * from city;
	select city_id,city,country_id,last_update from city;
	注意：*代表所有列
	查询city表中城市名称是Weifang的所有信息
	select * from city where city='Weifang';
	查询city表中所有城市的名称
	select city from city;
	查询city表中城市名称为Yingkou的country_id
	select country_id from city where city='Yingkou';
	a.where条件
	a1.比较运算符
		>	大于
		<	小于
		=	等于
		>=	大于等于
		<=	小于等于
		<>	不等于
		!=	不等于
	注意：=>   =< 非正常写法
	例子：查询customer表中customer_id小于100的所有信息
	select * from customer where customer_id<100;
	例子：查询customer表中名字不是Long的所有信息
	select * from customer where first_name<>'LONG';
	a2.关系运算符
		and	同时满足条件
		or	满足一个条件即可
		not	不满足条件
	例子：查询customer表中customer_id范围在100和110之间所有人员的名字
	select first_name from customer where customer_id >=100 and customer_id<=110;
	例子：查询customer表中名字是Mike或者heygor的所有信息
	select * from customer where first_name='Mike' or first_name='heygor';
	a3.区间
	between...and...
	包括两个端点，小在前，大在后
	例子：查询customer表中customer_id范围在100和110之间所有人员的名字
	select first_name from customer where customer_id between 100 and 110;
	a4.模糊查询
	当信息不完整时候，使用模糊查询，通常和字符串类型一起使用
	like
	%	任意个字符
	_	一个字符
	例子：查询customer表中名字以M开头的所有信息
	select * from customer where first_name like 'M%';
	例子：查询customer表中名字以E结尾的所有信息
	select * from customer where first_name like '%E';
	例子：查询customer表中名字是6个字符的所有信息
	select * from customer where first_name like '______';
	a5.空值查询
	空没有任何数据类型，没有任何值
	不能用于比较和运算
	查询时候使用is null或者is not null
	查询kr表中ddate为空的所有信息
	select * from kr where ddate is null;
	查询kr表中ddate不为空的所有信息
	select * from kr where ddate is not null;
	a6.in(在...里面)
	或的关系
	例子：查询customer表中名字是Mike或者heygor的所有信息
	select * from customer where first_name in ('Mike','heygor')

======================================================================
多表查询
当一张表无法满足查询条件是后，使用多张表进行操作
a.迪卡尔积
不做任何关联产生的数据库
表1
1
2

表2
1 a
2 b
3 c

1 1 a
1 2 b
1 3 c
2 1 a
2 2 b
2 3 c
统计city表中所有的数据
select count(*) from city;600
统计country表中所有的数据
select count(*) from country;109
统计迪卡尔积中所有数据
select count(*) from city,country;65400

迪卡尔积会造成数据量成倍增加，无效数据增多，降低系统性能
为了避免此类情况使用内联查询，左联查询，右联查询

内联查询
语法：
select 列 from 表1,表2 where 表1.列=表2.列;
select 列 from 表1 inner join 表2 on 表1.列=表2.列;
例子：查询国家名称为China的城市名称有哪些？
1.分析相关的列
	国家名称
	城市名称

2.分析列相关的表有哪些
	city  city
	country country
3.关联两张表
	select * from city,country
	where city.country_id=country.country_id;
4.过滤
         select city from city,country
         where city.country_id=country.country_id
	 and country='China';

例子：查询城市名称为Shenzhen的国家名称是什么？country_id是什么？
3.关联
	select * from city c,country co
	where c.country_id=co.country_id;
4.过滤
	select co.country,c.country_id  from city c,country co
        where c.country_id=co.country_id
	and c.city='Shenzhen';












































	


























